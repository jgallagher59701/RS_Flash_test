;;; PlatformIO Project Configuration File
;;;
;;;   Build options: build flags, source filter
;;;   Upload options: custom upload port, speed and extra flags
;;;   Library options: dependencies, extra library storages
;;;   Advanced options: extra scripting
;;;
;;; Please visit documentation for the other options and examples
;;; https://docs.platformio.org/page/projectconf.html
;;;
;;; The RocketScream has an SWD connector. For debugger info, 
;;; see https://docs.platformio.org/en/latest/plus/debug-tools/jlink.html

;;; The code only supports the M0-based RocketScream

[platformio]
default_envs = zeroUSB

;; You can inject these options into [env:] section
;; using ${common_env_data.***} (see below)

[common_env_data]
build_flags = 
    -DERASE_FLASH=0

lib_deps_builtin = SPI
   
lib_deps_external = 
    arduino-libraries/RTCZero@^1.6.0
    paulstoffregen/SerialFlash

;; Serial Monitor options
upload_speed = 115200
monitor_speed = 115200

[zeroUSB]
;; build the code that writes sample data to the flash
platform = atmelsam
board = zeroUSB
framework = arduino
;;platform_packages =
  ; use upstream Git version
  ;;framework-arduino@ https://github.com/arduino/ArduinoCore-samd.git

build_flags =
    ${common_env_data.build_flags}
 
;; Dependencies
lib_deps =
    ${common_env_data.lib_deps_builtin}
    ${common_env_data.lib_deps_external}

[j-link]
build_type = debug
debug_build_flags = -O0 -ggdb3 -g3
debug_init_break = tbreak loop
debug_tool = jlink
upload_protocol = jlink

[env:zeroUSB]
extends = zeroUSB
;; Build options
src_filter = 
    +<*.cc>
    -<read_data_from_flash.cc>

build_flags = 
    ${common_env_data.build_flags}
    -DVERBOSE=1

[env:zeroUSB-DEBUG]
extends = zeroUSB, j-link
;; Build options
src_filter = 
    +<*.cc>
    -<read_data_from_flash.cc>

build_flags = 
    ${common_env_data.build_flags}
    -DJLINK=1

[env:readZeroUSB]
extends = zeroUSB

;; Build options
build_flags =
    ${common_env_data.build_flags}
    -DVERBOSE=1
    
src_filter = 
    +<*.cc>
    -<write_data_to_flash.cc> 

[env:readZeroUSB-DEBUG]
extends = zeroUSB, j-link

;; Build options
build_flags =
    -DVERBOSE=1

src_filter = 
   +<*.cc>
   -<write_data_to_flash.cc> 

[env:native]
platform = native
build_flags =
test_filter = native_*
lib_ldf_mode = deep

;; To use this, must add the UNIT_TEST guard around setup() and loop()
test_build_project_src = yes
